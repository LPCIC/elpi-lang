{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Elpi",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#namespace-declaration"
		},
		{
			"include": "#clause-declaration"
		},
		{
			"include": "#type-declaration"
		},
		{
			"include": "#typeabbrev-declaration"
		},
		{
			"include": "#kind-declaration"
		},
		{
			"include": "#pred-declaration"
		},
		{
			"include": "#macro-declaration"
		},
		{
			"include": "#attribute-declaration"
		},
		{
			"include": "#mode-declaration"
		},
		{
			"include": "#rule-declaration"
		},
		{
			"include": "#constraint-declaration"
		},
		{
			"include": "#accumulate-declaration"
		},
		{
			"include": "#shorten-declaration"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#binders"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#clause-def-ident"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.elpi",
					"begin": "/\\*",
					"end": "\\*/"
				},
				{
					"name": "comment.line.percentage.elpi",
					"match": "%.*$"
				}
			]
		},
		"attribute-declaration": {
			"name": "attribute.declaration",
			"patterns": [
				{
					"match": ":if\\s+\"\\S+\"",
					"name": "entity.name.tag"
				},
				{
					"match": ":functional",
					"name": "entity.name.tag"
				},
				{
					"match": ":untyped",
					"name": "entity.name.tag"
				},
				{
					"match": ":name\\s+\"\\S+\"",
					"name": "entity.name.tag"
				},
				{
					"match": ":before\\s+\"\\S+\"",
					"name": "entity.name.tag"
				},
				{
					"match": ":after\\s+\"\\S+\"",
					"name": "entity.name.tag"
				},
				{
					"include": "#indexing-declaration"
				}
			]
		},
		"indexing-declaration": {
			"begin": "(:index)\\s*\\(",
			"end": "\\)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.tag"
				}
			},
			"patterns": [
				{
					"match": "_|[0-9]",
					"name": "constant.numeric"
				}
			]
		},
		"constraint-declaration": {
			"begin": "^\\s*(constraint)([^{]+)",
			"end": "{",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "entity.name.function"
				}
			}
		},
		"rule-declaration": {
			"begin": "^\\s*(rule)",
			"end": "(\\.)\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		"accumulate-declaration": {
			"begin": "^\\s*(accumulate)",
			"end": "(\\.)\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"patterns": [
				{
					"include": "#strings"
				}
			]
		},
		"pred-declaration": {
			"name": "pred.declaration",
			"begin": "((external)?\\s*(pred|func))\\s+({{{ident}}}|{{{infix}}})",
			"end": "(?<=\\.\\s)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "keyword.control.elpi"
				},
				"3": {
					"name": "keyword.control.elpi"
				},
				"4": {
					"name": "entity.name.function"
				}
			},
			"patterns": [
				{
					"begin": "{{{wbl}}}(i:|o:)",
					"end": "(,|\\.\\s)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.tag"
						}
					},
					"endCaptures": {
						"1": {
							"name": "keyword.control.elpi"
						}
					},
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"match": "{{{typechars}}}",
							"name": "entity.name.type"
						}
					]
				},
				{
					"include": "#comments"
				}
			]
		},
		"mode-declaration": {
			"name": "mode.declaration",
			"begin": "^(\\s*mode)\\s+\\((({{{ident}}})|({{{infix}}})+)\\s",
			"end": "([io\\s]+)\\)\\s*(\\.)\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "entity.name.function"
				}
			},
			"endCaptures": {
				"2": {
					"name": "keyword.control.elpi"
				},
				"1": {
					"name": "entity.name.tag"
				}
			},
			"patterns": []
		},
		"kind-declaration": {
			"name": "kind.declaration",
			"begin": "^(\\s*(external)?\\s*kind)\\s+(?'rec'({{{ident}}}|{{{infix}}})(,\\s(\\g'rec'))?)\\s+([^\\.]+)",
			"end": "(\\.)\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "keyword.control.elpi"
				},
				"3": {
					"name": "entity.name.type"
				},
				"8": {
					"name": "entity.name.type"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"patterns": [
				{
					"include": "#comments"
				}
			]
		},
		"type-declaration": {
			"name": "type.declaration",
			"begin": "^(\\s*(external)?\\s*type)\\s+(?'rec'({{{ident}}}|{{{infix}}})(,\\s(\\g'rec'))?)",
			"end": "(?<=\\.\\s)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "keyword.control.elpi"
				},
				"3": {
					"name": "entity.name.function"
				}
			},
			"patterns": [
				{
					"begin": "",
					"end": "(\\.\\s)",
					"endCaptures": {
						"1": {
							"name": "keyword.control.elpi"
						}
					},
					"patterns": [
						{
							"match": "{{{typechars}}}",
							"name": "entity.name.type"
						},
						{
							"include": "#comments"
						}
					]
				}
			]
		},
		"typeabbrev-declaration": {
			"name": "typeabbrev.declaration",
			"begin": "^(\\s*typeabbrev)",
			"end": "(?<=\\.\\s)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"patterns": [
				{
					"match": "{{{typechars}}}",
					"name": "entity.name.type"
				},
				{
					"include": "#comments"
				}
			]
		},
		"macro-declaration": {
			"name": "macro.declaration",
			"begin": "^\\s*(macro)\\s+(@{{{ident}}})\\s",
			"end": "(\\.)\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "entity.name.type"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"patterns": [
				{
					"include": "$self"
				}
			]
		},
		"shorten-declaration": {
			"begin": "^\\s*(shorten)",
			"end": "(\\.)\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			},
			"patterns": [
				{
					"include": "#shortening-expr"
				}
			]
		},
		"shortening-expr": {
			"begin": "{{{wbl}}}({{{ident}}})\\b\\.{",
			"end": "}",
			"beginCaptures": {
				"1": {
					"name": "entity.name.section"
				}
			},
			"patterns": [
				{
					"include": "#shortening-expr"
				},
				{
					"match": "{{{wbl}}}{{{ident}}}\\b",
					"name": "entity.name.function"
				}
			]
		},
		"namespace-declaration": {
			"begin": "^\\s*(namespace)\\s{{{wbl}}}({{{ident}}})\\b\\s*{",
			"end": "}",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "entity.name.section"
				}
			},
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "$self"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"match": "{{{wbl}}}{{{var}}}",
					"name": "variable.language.elpi"
				},
				{
					"match": "{{{wbl}}}{{{ident}}}\\s*(?=\\\\)",
					"name": "variable.language.elpi"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.elpi",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.elpi",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.elpi",
			"match": "{{{wbl}}}{{{number}}}\\b"
		},
		"keywords": {
			"name": "keyword.control.elpi",
			"match": "!|:-|=>|\\[|\\]|,|{{{wbl}}}is\\b|<=>|=|\\?\\-|\\\\|\\|"
		},
		"binders": {
			"name": "binder.elpi",
			"begin": "{{{wbl}}}(pi|sigma) (({{{ident}}}|{{{var}}}| )+)",
			"end": "(\\\\)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				},
				"2": {
					"name": "variable.language.elpi"
				}
			},
			"endCaptures": {
				"1": {
					"name": "keyword.control.elpi"
				}
			}
		},
		"clause-def-ident": {
			"match": "^( *{{{ident}}}(?=.*:-)|{{{ident}}}(?=.*\\.\\s*(%.*)?$))",
			"name": "entity.name.function"
		}
	},
	"scopeName": "source.elpi"
}